# Reference genome
# Genomes supported in the current version: hg38
genome = 'hg38'

# Number of cores
cores = 1

# Format of output file: 'tsv', 'tsv.gz'
output_format = 'tsv.gz'


# Mappability
# Read two files containing genome mappability data
# Please, check that your files use the same reference genome used in this analysis
# mappable_regions contains regions of high mappability in TSV format
# By default, this regions are obtained from bgdata
# Alternatively, you can provide a path to a file
mappable_regions = "%(bgdata://genomemappability/hg38/gem_100bp)"
# blacklisted_regions contains artifact regions of low mappability
# By default, these regions are obtained from bgdata
# Alternatively, you can provide a path to a file
blacklisted_regions = "%(bgdata://genomemappability/hg38/blacklist)"

# Population variants
# Read a file containing population variants with allele frequency >= 1%
# Please, check that your files use the same reference genome used in this analysis
# By default, these regions are obtained from bgdata
# Alternatively, you can provide a path to a file
population_variants = "%(bgdata://populationvariants/hg38/gnomad_v3_AF1)"

# Repeats
# Read a file containing repeatitive DNA sequences.
# By default, these regions are obtained from bgdata
# Alternatively, you can provide a path to a file
repeats = '/workspace/projects/noncoding_regions/data/repeatmasker/hg38_repeatmasker.reformat.gz'

# Ig and T-cell receptor regions
# Read a file containing Ig and TR regions.
# By default, these regions are obtained from bgdata
# Alternatively, you can provide a path to a file
ig_tr_regions = '/workspace/projects/genomic_regions/hg38/release_2/IG_TR_loci/hg38_IG_TR_loci.tstart_to_tend.gz'

# Genomic elements
# Read a file with genomic regions annotations to annotate hotspots
# By default, this regions are obtained from bgdata
# Alternatively, you can provide a path to a file
genomic_elements = '/workspace/projects/noncoding_regions/data/regions/genomic_elements/new/hg38_release2_annotations.txt.gz'


[finder]

# Minimum number of mutated samples to identify a hotspot
# By default, hotspots are defined as 2 mutated samples or more
samples_cutoff = 2

# Minimum number of mutations to identify a hotspot
# By definition, hotspots contain at least 2 mutations
# The number of mutations per hotspot may not be equal to the number
# of mutated samples per hotspot (e.g., one sample can contain two mutations)
# By default, hotspots are defined as 2 mutations or more
mutations_cutoff = 2

# By default, hotspots not overlapping genomic elements are removed from the output file
# Set variable to False if you want to keep these hotspots in the output file
remove_nonannotated_hotspots = True

# Identify hotspots in different groups of samples in the input mutations file
# Column names to group samples are: 'GROUP', 'GROUP_BY', 'COHORT', 'CANCER_TYPE', 'PLATFORM', 'TYPE'
# By default, hotspots are computed using all samples in the input mutations file
# Uncomment the line below to identify hotspots based on column name 'GROUP'
# groupby = 'GROUP'

# Compute hotspots per nucleotide alternate independently or merged
# By default, hotspots merge different alternates
split_alternates = False

# Annotate hotspots with genomic information
# By default, hotspots are annotated
annotate = True


